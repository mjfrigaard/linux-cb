---
engine: knitr
knitr:
  opts_chunk: 
    collapse: true
---

# Introduction {#sec-intro}

```{bash}
#| label: setup
#| include: false
whoami
```

```{r}
#| label: common
#| include: false
source("_common.R")
```

```{r}
#| label: co_box_rev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "o",
  look = "default", 
  hsize = "1.25", 
  size = "1.00", 
  header = "Caution", 
  fold = FALSE,
  contents = "This section is being revised. Thank you for your patience."
)
```

## [The Tale of Unix]{style="font-size: 1.05em; font-weight: bold;"}

Imagine Unix and Linux as cars in the vast landscape of automobile manufacturers. Our story begins in the late 1960s at AT&T’s Bell Labs—a significant moment in the history of technology. Unix was born out of a desire for a more flexible and portable operating system. In a time when computers were as big as rooms, Unix represented the custom-built car designed by a prestigious automaker. It was tailored to specific customers who needed top-end performance and reliability and was often used by large corporations or organizations.

### Unix Philosophy

Unix was a breath of fresh air, designed with a simplicity and elegance that set it apart. Its portability, the ability to run on different types of hardware, was a game-changer. Over time, Unix evolved into a comprehensive operating system, incorporating essential commands and operations and setting a new standard for efficiency and innovation.

The Unix philosophy (i.e., the foundational tools and techniques) became a blueprint for how computers could efficiently and securely manage tasks like organizing files or running software. The general tenets of the Unix philosophy are:

-   **Focus**: Design programs to perform a single task effectively.

-   **Synergy**: Programs should be designed to work well with others, ensuring programs can handle input and output via standard streams, allowing them to be combined in powerful ways.

-   **Text**: Unix tools are designed to read from and write to text streams.

-   **Extensibility**: Tools should be designed with the expectation that users will extend them beyond their intended purpose.

-   **Simplicity**: Simple, clear, straightforward code is preferred over complex code (even if it means sacrificing functionality).

## [The Emergence of Linux]{style="font-size: 1.05em; font-weight: bold;"}

Fast-forward a few decades to 1991, when a Finnish student named Linus Torvalds decided to create his free operating system kernel inspired by Unix. The Linux operating system was modeled after the principles of Unix but not directly derived from Unix source code and made freely available to anyone who wanted to use or improve it.

### Open-source

Linux flourished with the help of developers around the world. It’s a testament to what collaboration and shared goals can achieve. Whereas the development of Unix was largely driven by a specific group of organizations (like AT&T and Sun Microsystems), Linux was like a kit car designed by a community of enthusiasts, allowing anyone to assemble it with different parts, engines, and even paint (i.e., a fully customizable operating system). This global effort led to rapid evolution and various distributions, each interpreting and applying the Unix philosophy differently.

### Modern Uses

Today, Unix and Linux are everywhere. Although not as common on desktops as Windows or macOS, Linux distributions are the invisible forces behind much of the Internet and technology we interact with today:

-   **Servers and Supercomputers**: Linux is used by the majority of web servers powering the Internet and the world’s most powerful supercomputers due to its stability, security, and efficiency.

-   **Smartphones**: Android, the most popular mobile operating system, is powered by a Linux kernel, making Linux the silent workhorse behind billions of smartphones.

-   **Embedded Systems**: From smartwatches to smart home devices, Linux is often the go-to choice for running embedded systems thanks to its scalability and low cost.

Unix and Linux have grown from niche systems used by academics and researchers to foundational elements that power much of the digital world. They exemplify the power of open collaboration and innovation, showing how a small project or idea can grow and change the world.

------------------------------------------------------------------------

## [Recap]{style="font-size: 1.05em; font-weight: bold;"}

To summarize, both Unix and Linux are analogous to vehicles designed for transportation, but with a few important differences:

-   Unix is like a high-end, custom-built car designed for a specific market, offering luxury, reliability, and exclusivity.

-   Linux is like a kit car that can be built, modified, and customized however the user likes, with support from a large and active community of other enthusiasts.


```{r}
#| label: git_contrib_box
#| echo: false
#| results: asis
#| eval: true
git_contrib_box()
```
